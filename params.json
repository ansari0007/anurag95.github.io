{
  "name": "Anurag95.GitHub.io",
  "tagline": "Humor Detection for Yelp Reviews",
  "body": "Information Retrieval and Extraction\r\nMajor Project  \r\n\r\nFirst Deliverable ­ Scope \r\nHumour detection in Yelp reviews using Deep Learning \r\n\r\n### Problem Statement:\r\nOur problem is to predict community determined humor in Yelp reviews. Yelp reviews can be \r\nvoted as funny and, given a review, it is our task to label it as funny or not, using machine \r\nlearning techniques. \r\n\r\n### Applications  ­ \r\nYelp is a service whose utility relies on being able to provide an accurate, crowd­sourced \r\nopinion of a place of business. So it’s important to determine which reviews provide valuable \r\ninsight into a business. Humor could play an important role in this determination and help \r\nconsumers to get to informative reviews and not waste time on reviews which have nothing to \r\nprovide. So, our project would help in correctly identifying humor. \r\nChallenges ­ \r\nWe cannot have an idea whether or not our models can be extended out­of­domain. This is \r\nbecause there is no labeled corpus of funny texts – partially due to the subjectivity associated \r\nwith imposing a binary outcome on something such as humor. Some work has been done \r\napplying similar methods to Twitter, but no large, labelled datasets exist for thorough validation. \r\nSecond Deliverables Details ­  \r\nPre­processing ­  \r\n1. Tokenize the reviews, without removing stop words or punctuations, as they are quite \r\nexpressive in the context of Yelp.  \r\n2. Build word vectors using gensim package. \r\nShallow Algorithms ­  \r\nExplore shallow algorithms before moving to Deep Learning. We will apply SVM on bag of \r\nwords. Evaluation ­  \r\nWe convert the above mentioned problem into the binary classification regime. After balancing \r\nthe classes according to funny and not­funny, we optimize the classical log­likelihood and report \r\nthe classification accuracy. \r\nThird Deliverables Details ­  \r\nImplement the following deep learning techniques ­  \r\n1. Deep Feedforward Networks on two types of architectures – a classic, deep rectifier \r\nnetwork with heavy dropout, and a slightly more modern, shallower MaxOut. \r\n2. Convolutional Neural Networks \r\nTools ­  \r\n1.\r\n2.\r\n3.\r\n4.\r\nGensim Package ­ Build word vectors \r\nNLTK ­ Tokenization \r\nKeras library ­ Deep Learning Techniques \r\nScikit library ­ SVM Classifier \r\nReferences ­  \r\n1. Oliveira and Rodrigo, Humor Detection in Yelp reviews \r\nURL: ​\r\nhttps://cs224d.stanford.edu/reports/OliveiraLuke.pdf  \r\n ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}